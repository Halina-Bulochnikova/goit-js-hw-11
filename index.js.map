{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"48746428-ca8ddb89bc4c4cb9194f35bec\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\nexport async function fetchImages(query) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    console.error(\"Error fetching images:\", error);\n    throw error;\n  }\n}","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nexport function renderGallery(images) {\n  const gallery = document.querySelector(\".gallery\");\n  gallery.innerHTML = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <a href=\"${largeImageURL}\" class=\"gallery-item\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" />\n          <div class=\"info\">\n            <p>‚ù§Ô∏è ${likes}</p>\n            <p>üëÅÔ∏è ${views}</p>\n            <p>üí¨ ${comments}</p>\n            <p>‚¨áÔ∏è ${downloads}</p>\n          </div>\n        </a>`\n    )\n    .join(\"\");\n\n  const lightbox = new SimpleLightbox(\".gallery a\");\n  lightbox.refresh();\n}","import { fetchImages } from \"./js/pixabay-api.js\";\nimport { renderGallery } from \"./js/render-functions.js\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\"#search-form\");\nconst gallery = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader\");\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n  const query = event.target.elements.searchQuery.value.trim();\n\n  if (!query) {\n    iziToast.error({\n      title: \"Error\",\n      message: \"Search field cannot be empty!\",\n    });\n    return;\n  }\n\n  gallery.innerHTML = \"\";\n  loader.style.display = \"block\";\n\n  try {\n    const images = await fetchImages(query);\n    if (images.length === 0) {\n      iziToast.warning({\n        title: \"No Results\",\n        message: \"Sorry, no images found. Please try again!\",\n      });\n    } else {\n      renderGallery(images);\n    }\n  } catch (error) {\n    iziToast.error({\n      title: \"Error\",\n      message: \"Failed to fetch images. Try again later!\",\n    });\n  } finally {\n    loader.style.display = \"none\";\n  }\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","renderGallery","images","gallery","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","form","loader","event","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACvC,GAAI,CAUF,OATiB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GACe,KAAK,IACtB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACH,CClBO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYD,EACjB,IACC,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA,mBACjEL,CAAa;AAAA,sBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA,oBAE5BC,CAAK;AAAA,qBACJC,CAAK;AAAA,oBACNC,CAAQ;AAAA,oBACRC,CAAS;AAAA;AAAA,aAGxB,EACA,KAAK,EAAE,EAEO,IAAIC,EAAe,YAAY,EACvC,QAAO,CAClB,CCjBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CT,EAAU,SAAS,cAAc,UAAU,EAC3CU,EAAS,SAAS,cAAc,SAAS,EAE/CD,EAAK,iBAAiB,SAAU,MAAOE,GAAU,CAC/CA,EAAM,eAAc,EACpB,MAAMhB,EAAQgB,EAAM,OAAO,SAAS,YAAY,MAAM,OAEtD,GAAI,CAAChB,EAAO,CACViB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+BACf,CAAK,EACD,MACD,CAEDZ,EAAQ,UAAY,GACpBU,EAAO,MAAM,QAAU,QAEvB,GAAI,CACF,MAAMX,EAAS,MAAML,EAAYC,CAAK,EAClCI,EAAO,SAAW,EACpBa,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,2CACjB,CAAO,EAEDd,EAAcC,CAAM,CAEvB,MAAe,CACda,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0CACf,CAAK,CACL,QAAY,CACRF,EAAO,MAAM,QAAU,MACxB,CACH,CAAC"}